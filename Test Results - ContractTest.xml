<?xml version="1.0" encoding="UTF-8"?><testrun duration="640" footerText="Generated by IntelliJ IDEA on 29/08/23, 1:54 pm" name="ContractTest">
    <count name="total" value="41"/>
    <count name="error" value="1"/>
    <count name="passed" value="40"/>
    <config nameIsGenerated="true" configId="JUnit" name="ContractTest">
        <module name="specmatic-order-api"/>
        <extension name="coverage">
            <pattern>
                <option name="PATTERN" value="com.store.*"/>
                <option name="ENABLED" value="true"/>
            </pattern>
        </extension>
        <option name="PACKAGE_NAME" value="com.store"/>
        <option name="MAIN_CLASS_NAME" value="com.store.ContractTest"/>
        <option name="TEST_OBJECT" value="class"/>
        <method v="2">
            <option name="Make" enabled="true"/>
        </method>
    </config>
    <root name="ContractTest" comment="com.store" location="java:suite://com.store.ContractTest">
        <output type="stdout">/Library/Java/JavaVirtualMachines/temurin-19.jdk/Contents/Home/bin/java -ea -Dfile.encoding=UTF-8 -Didea.test.cyclic.buffer.size=1048576 -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=50065:/Applications/IntelliJ IDEA.app/Contents/bin -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath /Users/jaydeep/.m2/repository/org/junit/vintage/junit-vintage-engine/5.5.2/junit-vintage-engine-5.5.2.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/jaydeep/znsio/specmatic-order-api-java/target/test-classes:/Users/jaydeep/znsio/specmatic-order-api-java/target/classes:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.7.5/spring-boot-starter-actuator-2.7.5.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.7.5/spring-boot-actuator-autoconfigure-2.7.5.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-actuator/2.7.5/spring-boot-actuator-2.7.5.jar:/Users/jaydeep/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.4/jackson-datatype-jsr310-2.13.4.jar:/Users/jaydeep/.m2/repository/io/micrometer/micrometer-core/1.9.5/micrometer-core-1.9.5.jar:/Users/jaydeep/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/jaydeep/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/jaydeep/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/jaydeep/.m2/repository/com/intuit/karate/karate-junit5/1.2.0/karate-junit5-1.2.0.jar:/Users/jaydeep/.m2/repository/com/intuit/karate/karate-core/1.2.0/karate-core-1.2.0.jar:/Users/jaydeep/.m2/repository/org/graalvm/js/js-scriptengine/21.2.0/js-scriptengine-21.2.0.jar:/Users/jaydeep/.m2/repository/org/graalvm/sdk/graal-sdk/21.2.0/graal-sdk-21.2.0.jar:/Users/jaydeep/.m2/repository/org/graalvm/js/js/21.2.0/js-21.2.0.jar:/Users/jaydeep/.m2/repository/org/graalvm/regex/regex/21.2.0/regex-21.2.0.jar:/Users/jaydeep/.m2/repository/org/graalvm/truffle/truffle-api/21.2.0/truffle-api-21.2.0.jar:/Users/jaydeep/.m2/repository/com/ibm/icu/icu4j/69.1/icu4j-69.1.jar:/Users/jaydeep/.m2/repository/org/thymeleaf/thymeleaf/3.0.14.RELEASE/thymeleaf-3.0.14.RELEASE.jar:/Users/jaydeep/.m2/repository/ognl/ognl/3.1.26/ognl-3.1.26.jar:/Users/jaydeep/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/jaydeep/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/Users/jaydeep/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/Users/jaydeep/.m2/repository/com/linecorp/armeria/armeria/1.13.4/armeria-1.13.4.jar:/Users/jaydeep/.m2/repository/io/netty/netty-transport/4.1.70.Final/netty-transport-4.1.70.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-resolver/4.1.70.Final/netty-resolver-4.1.70.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-codec-haproxy/4.1.70.Final/netty-codec-haproxy-4.1.70.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-resolver-dns/4.1.70.Final/netty-resolver-dns-4.1.70.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-codec-dns/4.1.70.Final/netty-codec-dns-4.1.70.Final.jar:/Users/jaydeep/.m2/repository/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3.jar:/Users/jaydeep/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/jaydeep/.m2/repository/io/netty/netty-resolver-dns-native-macos/4.1.70.Final/netty-resolver-dns-native-macos-4.1.70.Final-osx-x86_64.jar:/Users/jaydeep/.m2/repository/io/netty/netty-resolver-dns-classes-macos/4.1.70.Final/netty-resolver-dns-classes-macos-4.1.70.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.70.Final/netty-transport-native-unix-common-4.1.70.Final-linux-x86_64.jar:/Users/jaydeep/.m2/repository/io/netty/netty-transport-native-epoll/4.1.70.Final/netty-transport-native-epoll-4.1.70.Final-linux-x86_64.jar:/Users/jaydeep/.m2/repository/io/netty/netty-tcnative-boringssl-static/2.0.44.Final/netty-tcnative-boringssl-static-2.0.44.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-handler-proxy/4.1.70.Final/netty-handler-proxy-4.1.70.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-codec-socks/4.1.70.Final/netty-codec-socks-4.1.70.Final.jar:/Users/jaydeep/.m2/repository/com/aayushatharva/brotli4j/brotli4j/1.6.0/brotli4j-1.6.0.jar:/Users/jaydeep/.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar:/Users/jaydeep/.m2/repository/org/apache/httpcomponents/httpcore/4.4.13/httpcore-4.4.13.jar:/Users/jaydeep/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/jaydeep/.m2/repository/ch/qos/logback/logback-classic/1.2.9/logback-classic-1.2.9.jar:/Users/jaydeep/.m2/repository/ch/qos/logback/logback-core/1.2.9/logback-core-1.2.9.jar:/Users/jaydeep/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.32/jcl-over-slf4j-1.7.32.jar:/Users/jaydeep/.m2/repository/org/antlr/antlr4-runtime/4.9.2/antlr4-runtime-4.9.2.jar:/Users/jaydeep/.m2/repository/info/cukes/cucumber-java/1.2.5/cucumber-java-1.2.5.jar:/Users/jaydeep/.m2/repository/info/cukes/cucumber-core/1.2.5/cucumber-core-1.2.5.jar:/Users/jaydeep/.m2/repository/de/siegmar/fastcsv/2.0.0/fastcsv-2.0.0.jar:/Users/jaydeep/.m2/repository/info/picocli/picocli/4.6.1/picocli-4.6.1.jar:/Users/jaydeep/.m2/repository/io/github/classgraph/classgraph/4.8.108/classgraph-4.8.108.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.5/spring-boot-starter-2.7.5.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar:/Users/jaydeep/.m2/repository/org/springframework/spring-context/5.3.23/spring-context-5.3.23.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.5/spring-boot-autoconfigure-2.7.5.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.5/spring-boot-starter-logging-2.7.5.jar:/Users/jaydeep/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/Users/jaydeep/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/Users/jaydeep/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/Users/jaydeep/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/jaydeep/.m2/repository/org/springframework/spring-core/5.3.23/spring-core-5.3.23.jar:/Users/jaydeep/.m2/repository/org/springframework/spring-jcl/5.3.23/spring-jcl-5.3.23.jar:/Users/jaydeep/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.5/spring-boot-starter-web-2.7.5.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.5/spring-boot-starter-json-2.7.5.jar:/Users/jaydeep/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.4/jackson-datatype-jdk8-2.13.4.jar:/Users/jaydeep/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.4/jackson-module-parameter-names-2.13.4.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.5/spring-boot-starter-tomcat-2.7.5.jar:/Users/jaydeep/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.68/tomcat-embed-core-9.0.68.jar:/Users/jaydeep/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.68/tomcat-embed-websocket-9.0.68.jar:/Users/jaydeep/.m2/repository/org/springframework/spring-web/5.3.23/spring-web-5.3.23.jar:/Users/jaydeep/.m2/repository/org/springframework/spring-beans/5.3.23/spring-beans-5.3.23.jar:/Users/jaydeep/.m2/repository/org/springframework/spring-webmvc/5.3.23/spring-webmvc-5.3.23.jar:/Users/jaydeep/.m2/repository/org/springframework/spring-expression/5.3.23/spring-expression-5.3.23.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-starter-security/2.7.5/spring-boot-starter-security-2.7.5.jar:/Users/jaydeep/.m2/repository/org/springframework/spring-aop/5.3.23/spring-aop-5.3.23.jar:/Users/jaydeep/.m2/repository/org/springframework/security/spring-security-config/5.7.4/spring-security-config-5.7.4.jar:/Users/jaydeep/.m2/repository/org/springframework/security/spring-security-core/5.7.4/spring-security-core-5.7.4.jar:/Users/jaydeep/.m2/repository/org/springframework/security/spring-security-crypto/5.7.4/spring-security-crypto-5.7.4.jar:/Users/jaydeep/.m2/repository/org/springframework/security/spring-security-web/5.7.4/spring-security-web-5.7.4.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.5/spring-boot-starter-validation-2.7.5.jar:/Users/jaydeep/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.68/tomcat-embed-el-9.0.68.jar:/Users/jaydeep/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/Users/jaydeep/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/jaydeep/.m2/repository/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final.jar:/Users/jaydeep/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-starter-test/2.7.5/spring-boot-starter-test-2.7.5.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-test/2.7.5/spring-boot-test-2.7.5.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/2.7.5/spring-boot-test-autoconfigure-2.7.5.jar:/Users/jaydeep/.m2/repository/com/jayway/jsonpath/json-path/2.7.0/json-path-2.7.0.jar:/Users/jaydeep/.m2/repository/net/minidev/json-smart/2.4.7/json-smart-2.4.7.jar:/Users/jaydeep/.m2/repository/net/minidev/accessors-smart/2.4.7/accessors-smart-2.4.7.jar:/Users/jaydeep/.m2/repository/org/slf4j/slf4j-api/1.7.33/slf4j-api-1.7.33.jar:/Users/jaydeep/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/jaydeep/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/jaydeep/.m2/repository/org/assertj/assertj-core/3.22.0/assertj-core-3.22.0.jar:/Users/jaydeep/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/jaydeep/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar:/Users/jaydeep/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar:/Users/jaydeep/.m2/repository/org/mockito/mockito-core/4.5.1/mockito-core-4.5.1.jar:/Users/jaydeep/.m2/repository/net/bytebuddy/byte-buddy/1.12.9/byte-buddy-1.12.9.jar:/Users/jaydeep/.m2/repository/net/bytebuddy/byte-buddy-agent/1.12.9/byte-buddy-agent-1.12.9.jar:/Users/jaydeep/.m2/repository/org/objenesis/objenesis/3.2/objenesis-3.2.jar:/Users/jaydeep/.m2/repository/org/mockito/mockito-junit-jupiter/4.5.1/mockito-junit-jupiter-4.5.1.jar:/Users/jaydeep/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/jaydeep/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/jaydeep/.m2/repository/org/springframework/spring-test/5.3.23/spring-test-5.3.23.jar:/Users/jaydeep/.m2/repository/org/xmlunit/xmlunit-core/2.9.0/xmlunit-core-2.9.0.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-maven-plugin/2.7.5/spring-boot-maven-plugin-2.7.5.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-buildpack-platform/2.7.5/spring-boot-buildpack-platform-2.7.5.jar:/Users/jaydeep/.m2/repository/net/java/dev/jna/jna-platform/5.7.0/jna-platform-5.7.0.jar:/Users/jaydeep/.m2/repository/net/java/dev/jna/jna/5.7.0/jna-5.7.0.jar:/Users/jaydeep/.m2/repository/org/apache/commons/commons-compress/1.21/commons-compress-1.21.jar:/Users/jaydeep/.m2/repository/org/tomlj/tomlj/1.0.0/tomlj-1.0.0.jar:/Users/jaydeep/.m2/repository/org/springframework/boot/spring-boot-loader-tools/2.7.5/spring-boot-loader-tools-2.7.5.jar:/Users/jaydeep/.m2/repository/org/sonatype/plexus/plexus-build-api/0.0.7/plexus-build-api-0.0.7.jar:/Users/jaydeep/.m2/repository/org/codehaus/plexus/plexus-utils/1.5.8/plexus-utils-1.5.8.jar:/Users/jaydeep/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.5.2/junit-jupiter-engine-5.5.2.jar:/Users/jaydeep/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/Users/jaydeep/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.5.2/junit-jupiter-api-5.5.2.jar:/Users/jaydeep/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/jaydeep/.m2/repository/org/junit/platform/junit-platform-commons/1.5.2/junit-platform-commons-1.5.2.jar:/Users/jaydeep/.m2/repository/org/junit/platform/junit-platform-runner/1.6.0/junit-platform-runner-1.6.0.jar:/Users/jaydeep/.m2/repository/junit/junit/4.13/junit-4.13.jar:/Users/jaydeep/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/jaydeep/.m2/repository/org/junit/platform/junit-platform-launcher/1.6.0/junit-platform-launcher-1.6.0.jar:/Users/jaydeep/.m2/repository/org/junit/platform/junit-platform-suite-api/1.6.0/junit-platform-suite-api-1.6.0.jar:/Users/jaydeep/.m2/repository/org/junit/platform/junit-platform-engine/1.6.0/junit-platform-engine-1.6.0.jar:/Users/jaydeep/.m2/repository/org/apache/maven/plugins/maven-surefire-plugin/2.22.2/maven-surefire-plugin-2.22.2.jar:/Users/jaydeep/.m2/repository/org/apache/maven/surefire/maven-surefire-common/2.22.2/maven-surefire-common-2.22.2.jar:/Users/jaydeep/.m2/repository/org/apache/maven/plugin-tools/maven-plugin-annotations/3.5.2/maven-plugin-annotations-3.5.2.jar:/Users/jaydeep/.m2/repository/org/apache/maven/surefire/surefire-api/2.22.2/surefire-api-2.22.2.jar:/Users/jaydeep/.m2/repository/org/apache/maven/surefire/surefire-logger-api/2.22.2/surefire-logger-api-2.22.2.jar:/Users/jaydeep/.m2/repository/org/apache/maven/surefire/surefire-booter/2.22.2/surefire-booter-2.22.2.jar:/Users/jaydeep/.m2/repository/org/apache/maven/maven-plugin-descriptor/2.2.1/maven-plugin-descriptor-2.2.1.jar:/Users/jaydeep/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-9-stable-1/plexus-container-default-1.0-alpha-9-stable-1.jar:/Users/jaydeep/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/Users/jaydeep/.m2/repository/org/apache/maven/maven-project/2.2.1/maven-project-2.2.1.jar:/Users/jaydeep/.m2/repository/org/apache/maven/maven-profile/2.2.1/maven-profile-2.2.1.jar:/Users/jaydeep/.m2/repository/org/apache/maven/maven-artifact-manager/2.2.1/maven-artifact-manager-2.2.1.jar:/Users/jaydeep/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-6/wagon-provider-api-1.0-beta-6.jar:/Users/jaydeep/.m2/repository/backport-util-concurrent/backport-util-concurrent/3.1/backport-util-concurrent-3.1.jar:/Users/jaydeep/.m2/repository/org/apache/maven/maven-plugin-registry/2.2.1/maven-plugin-registry-2.2.1.jar:/Users/jaydeep/.m2/repository/org/apache/maven/maven-model/2.2.1/maven-model-2.2.1.jar:/Users/jaydeep/.m2/repository/org/apache/maven/maven-toolchain/2.2.1/maven-toolchain-2.2.1.jar:/Users/jaydeep/.m2/repository/org/apache/maven/plugins/maven-compiler-plugin/3.8.1/maven-compiler-plugin-3.8.1.jar:/Users/jaydeep/.m2/repository/org/apache/maven/maven-plugin-api/3.0/maven-plugin-api-3.0.jar:/Users/jaydeep/.m2/repository/org/sonatype/sisu/sisu-inject-plexus/1.4.2/sisu-inject-plexus-1.4.2.jar:/Users/jaydeep/.m2/repository/org/sonatype/sisu/sisu-inject-bean/1.4.2/sisu-inject-bean-1.4.2.jar:/Users/jaydeep/.m2/repository/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar:/Users/jaydeep/.m2/repository/org/apache/maven/maven-artifact/3.0/maven-artifact-3.0.jar:/Users/jaydeep/.m2/repository/org/apache/maven/maven-core/3.0/maven-core-3.0.jar:/Users/jaydeep/.m2/repository/org/apache/maven/maven-settings/3.0/maven-settings-3.0.jar:/Users/jaydeep/.m2/repository/org/apache/maven/maven-settings-builder/3.0/maven-settings-builder-3.0.jar:/Users/jaydeep/.m2/repository/org/apache/maven/maven-repository-metadata/3.0/maven-repository-metadata-3.0.jar:/Users/jaydeep/.m2/repository/org/apache/maven/maven-model-builder/3.0/maven-model-builder-3.0.jar:/Users/jaydeep/.m2/repository/org/apache/maven/maven-aether-provider/3.0/maven-aether-provider-3.0.jar:/Users/jaydeep/.m2/repository/org/sonatype/aether/aether-impl/1.7/aether-impl-1.7.jar:/Users/jaydeep/.m2/repository/org/sonatype/aether/aether-spi/1.7/aether-spi-1.7.jar:/Users/jaydeep/.m2/repository/org/sonatype/aether/aether-api/1.7/aether-api-1.7.jar:/Users/jaydeep/.m2/repository/org/sonatype/aether/aether-util/1.7/aether-util-1.7.jar:/Users/jaydeep/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar:/Users/jaydeep/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.2.3/plexus-classworlds-2.2.3.jar:/Users/jaydeep/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/Users/jaydeep/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar:/Users/jaydeep/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar:/Users/jaydeep/.m2/repository/org/apache/maven/shared/maven-shared-utils/3.2.1/maven-shared-utils-3.2.1.jar:/Users/jaydeep/.m2/repository/commons-io/commons-io/2.5/commons-io-2.5.jar:/Users/jaydeep/.m2/repository/org/apache/maven/shared/maven-shared-incremental/1.1/maven-shared-incremental-1.1.jar:/Users/jaydeep/.m2/repository/org/codehaus/plexus/plexus-java/0.9.10/plexus-java-0.9.10.jar:/Users/jaydeep/.m2/repository/org/ow2/asm/asm/6.2/asm-6.2.jar:/Users/jaydeep/.m2/repository/com/thoughtworks/qdox/qdox/2.0-M8/qdox-2.0-M8.jar:/Users/jaydeep/.m2/repository/org/codehaus/plexus/plexus-compiler-api/2.8.4/plexus-compiler-api-2.8.4.jar:/Users/jaydeep/.m2/repository/org/codehaus/plexus/plexus-compiler-manager/2.8.4/plexus-compiler-manager-2.8.4.jar:/Users/jaydeep/.m2/repository/org/codehaus/plexus/plexus-compiler-javac/2.8.4/plexus-compiler-javac-2.8.4.jar:/Users/jaydeep/.m2/repository/in/specmatic/specmatic-core/0.75.2/specmatic-core-0.75.2.jar:/Users/jaydeep/.m2/repository/io/cucumber/gherkin/22.0.0/gherkin-22.0.0.jar:/Users/jaydeep/.m2/repository/io/cucumber/messages/17.1.1/messages-17.1.1.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-server-netty-jvm/2.1.3/ktor-server-netty-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/org/jetbrains/kotlinx/kotlinx-coroutines-core-jvm/1.6.4/kotlinx-coroutines-core-jvm-1.6.4.jar:/Users/jaydeep/.m2/repository/org/jetbrains/kotlinx/kotlinx-coroutines-jdk8/1.6.4/kotlinx-coroutines-jdk8-1.6.4.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-server-host-common-jvm/2.1.3/ktor-server-host-common-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/io/netty/netty-codec-http2/4.1.78.Final/netty-codec-http2-4.1.78.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-common/4.1.78.Final/netty-common-4.1.78.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-buffer/4.1.78.Final/netty-buffer-4.1.78.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-codec/4.1.78.Final/netty-codec-4.1.78.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-handler/4.1.78.Final/netty-handler-4.1.78.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-codec-http/4.1.78.Final/netty-codec-http-4.1.78.Final.jar:/Users/jaydeep/.m2/repository/org/eclipse/jetty/alpn/alpn-api/1.1.3.v20160715/alpn-api-1.1.3.v20160715.jar:/Users/jaydeep/.m2/repository/io/netty/netty-transport-native-kqueue/4.1.78.Final/netty-transport-native-kqueue-4.1.78.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.78.Final/netty-transport-native-unix-common-4.1.78.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-transport-classes-kqueue/4.1.78.Final/netty-transport-classes-kqueue-4.1.78.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-transport-native-epoll/4.1.78.Final/netty-transport-native-epoll-4.1.78.Final.jar:/Users/jaydeep/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.78.Final/netty-transport-classes-epoll-4.1.78.Final.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-server-core-jvm/2.1.3/ktor-server-core-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/com/typesafe/config/1.4.2/config-1.4.2.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-utils-jvm/2.1.3/ktor-utils-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-io-jvm/2.1.3/ktor-io-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-http-jvm/2.1.3/ktor-http-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-serialization-jvm/2.1.3/ktor-serialization-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-events-jvm/2.1.3/ktor-events-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-common/1.6.21/kotlin-stdlib-common-1.6.21.jar:/Users/jaydeep/.m2/repository/org/fusesource/jansi/jansi/2.4.0/jansi-2.4.0.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-client-core-jvm/2.1.3/ktor-client-core-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-websocket-serialization-jvm/2.1.3/ktor-websocket-serialization-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/org/jetbrains/kotlinx/kotlinx-coroutines-slf4j/1.6.4/kotlinx-coroutines-slf4j-1.6.4.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-client-apache-jvm/2.1.3/ktor-client-apache-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.5/httpasyncclient-4.1.5.jar:/Users/jaydeep/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.15/httpcore-nio-4.4.15.jar:/Users/jaydeep/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-server-cors-jvm/2.1.3/ktor-server-cors-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-server-double-receive-jvm/2.1.3/ktor-server-double-receive-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/org/jetbrains/kotlinx/kotlinx-serialization-json-jvm/1.4.1/kotlinx-serialization-json-jvm-1.4.1.jar:/Users/jaydeep/.m2/repository/org/jetbrains/kotlinx/kotlinx-serialization-core-jvm/1.4.1/kotlinx-serialization-core-jvm-1.4.1.jar:/Users/jaydeep/.m2/repository/org/eclipse/jgit/org.eclipse.jgit/5.13.0.202109080827-r/org.eclipse.jgit-5.13.0.202109080827-r.jar:/Users/jaydeep/.m2/repository/com/googlecode/javaewah/JavaEWAH/1.1.12/JavaEWAH-1.1.12.jar:/Users/jaydeep/.m2/repository/org/eclipse/jgit/org.eclipse.jgit.ssh.apache/5.13.0.202109080827-r/org.eclipse.jgit.ssh.apache-5.13.0.202109080827-r.jar:/Users/jaydeep/.m2/repository/org/apache/sshd/sshd-osgi/2.7.0/sshd-osgi-2.7.0.jar:/Users/jaydeep/.m2/repository/org/apache/sshd/sshd-sftp/2.7.0/sshd-sftp-2.7.0.jar:/Users/jaydeep/.m2/repository/org/apache/sshd/sshd-core/2.7.0/sshd-core-2.7.0.jar:/Users/jaydeep/.m2/repository/org/apache/sshd/sshd-common/2.7.0/sshd-common-2.7.0.jar:/Users/jaydeep/.m2/repository/net/i2p/crypto/eddsa/0.3.0/eddsa-0.3.0.jar:/Users/jaydeep/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.14.0/jackson-databind-2.14.0.jar:/Users/jaydeep/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.14.0/jackson-annotations-2.14.0.jar:/Users/jaydeep/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.14.0/jackson-core-2.14.0.jar:/Users/jaydeep/.m2/repository/io/swagger/parser/v3/swagger-parser/2.1.9/swagger-parser-2.1.9.jar:/Users/jaydeep/.m2/repository/io/swagger/parser/v3/swagger-parser-v2-converter/2.1.9/swagger-parser-v2-converter-2.1.9.jar:/Users/jaydeep/.m2/repository/io/swagger/swagger-core/1.6.9/swagger-core-1.6.9.jar:/Users/jaydeep/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar:/Users/jaydeep/.m2/repository/io/swagger/swagger-models/1.6.9/swagger-models-1.6.9.jar:/Users/jaydeep/.m2/repository/io/swagger/swagger-annotations/1.6.9/swagger-annotations-1.6.9.jar:/Users/jaydeep/.m2/repository/com/google/guava/guava/31.0.1-android/guava-31.0.1-android.jar:/Users/jaydeep/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/jaydeep/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/jaydeep/.m2/repository/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:/Users/jaydeep/.m2/repository/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:/Users/jaydeep/.m2/repository/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:/Users/jaydeep/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/jaydeep/.m2/repository/io/swagger/swagger-parser/1.0.64/swagger-parser-1.0.64.jar:/Users/jaydeep/.m2/repository/io/swagger/swagger-compat-spec-parser/1.0.64/swagger-compat-spec-parser-1.0.64.jar:/Users/jaydeep/.m2/repository/com/github/java-json-tools/json-schema-validator/2.2.14/json-schema-validator-2.2.14.jar:/Users/jaydeep/.m2/repository/com/github/java-json-tools/jackson-coreutils-equivalence/1.0/jackson-coreutils-equivalence-1.0.jar:/Users/jaydeep/.m2/repository/com/github/java-json-tools/json-schema-core/1.2.14/json-schema-core-1.2.14.jar:/Users/jaydeep/.m2/repository/com/github/java-json-tools/uri-template/0.10/uri-template-0.10.jar:/Users/jaydeep/.m2/repository/org/mozilla/rhino/1.7.7.2/rhino-1.7.7.2.jar:/Users/jaydeep/.m2/repository/com/sun/mail/mailapi/1.6.2/mailapi-1.6.2.jar:/Users/jaydeep/.m2/repository/joda-time/joda-time/2.10.5/joda-time-2.10.5.jar:/Users/jaydeep/.m2/repository/com/googlecode/libphonenumber/libphonenumber/8.11.1/libphonenumber-8.11.1.jar:/Users/jaydeep/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/Users/jaydeep/.m2/repository/com/github/java-json-tools/json-patch/1.13/json-patch-1.13.jar:/Users/jaydeep/.m2/repository/com/github/java-json-tools/msg-simple/1.2/msg-simple-1.2.jar:/Users/jaydeep/.m2/repository/com/github/java-json-tools/btf/1.3/btf-1.3.jar:/Users/jaydeep/.m2/repository/com/github/java-json-tools/jackson-coreutils/2.0/jackson-coreutils-2.0.jar:/Users/jaydeep/.m2/repository/io/swagger/core/v3/swagger-models/2.2.7/swagger-models-2.2.7.jar:/Users/jaydeep/.m2/repository/io/swagger/parser/v3/swagger-parser-core/2.1.9/swagger-parser-core-2.1.9.jar:/Users/jaydeep/.m2/repository/io/swagger/parser/v3/swagger-parser-v3/2.1.9/swagger-parser-v3-2.1.9.jar:/Users/jaydeep/.m2/repository/io/swagger/core/v3/swagger-core/2.2.7/swagger-core-2.2.7.jar:/Users/jaydeep/.m2/repository/io/swagger/core/v3/swagger-annotations/2.2.7/swagger-annotations-2.2.7.jar:/Users/jaydeep/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.14.0/jackson-dataformat-yaml-2.14.0.jar:/Users/jaydeep/.m2/repository/com/squareup/okhttp3/okhttp/4.9.1/okhttp-4.9.1.jar:/Users/jaydeep/.m2/repository/com/squareup/okio/okio/2.8.0/okio-2.8.0.jar:/Users/jaydeep/.m2/repository/in/specmatic/junit5-support/0.75.2/junit5-support-0.75.2.jar:/Users/jaydeep/.m2/repository/org/jetbrains/kotlin/kotlin-maven-serialization/1.7.21/kotlin-maven-serialization-1.7.21.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-client-cio-jvm/2.1.3/ktor-client-cio-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-http-cio-jvm/2.1.3/ktor-http-cio-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-network-jvm/2.1.3/ktor-network-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-websockets-jvm/2.1.3/ktor-websockets-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/io/ktor/ktor-network-tls-jvm/2.1.3/ktor-network-tls-jvm-2.1.3.jar:/Users/jaydeep/.m2/repository/org/jetbrains/kotlin/kotlin-reflect/1.7.20/kotlin-reflect-1.7.20.jar:/Users/jaydeep/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.7.20/kotlin-stdlib-1.7.20.jar:/Users/jaydeep/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar:/Users/jaydeep/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-jdk8/1.7.20/kotlin-stdlib-jdk8-1.7.20.jar:/Users/jaydeep/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-jdk7/1.7.20/kotlin-stdlib-jdk7-1.7.20.jar:/Users/jaydeep/.m2/repository/org/jetbrains/kotlin/kotlin-test-junit5/1.7.20/kotlin-test-junit5-1.7.20.jar:/Users/jaydeep/.m2/repository/org/jetbrains/kotlin/kotlin-test/1.7.20/kotlin-test-1.7.20.jar com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.store.ContractTest
</output>
        <output type="stdout">  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.7.5)
13:54:04.157 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 
Using generated security password: d4b6c1ea-2b4f-4cf0-9e11-87691f4e0a10
This generated password is for development use only. Your security configuration must be updated before running your application in production.
|-----------------------------------------------------------------------------------------|
| API COVERAGE SUMMARY                                                                    |
|-----------------------------------------------------------------------------------------|
| coverage | path                     | method | response | # exercised | remarks         |
|----------|--------------------------|--------|----------|-------------|-----------------|
|       0% | /internal/metrics        | GET    |          |           0 | missing in spec |
|     100% | /orders                  | GET    |      200 |           1 | covered         |
|          |                          | POST   |      200 |           1 | covered         |
|          |                          |        |      400 |           5 | covered         |
|     100% | /orders/{id}             | DELETE |      200 |           1 | covered         |
|          |                          | GET    |      200 |           1 | covered         |
|          |                          |        |      404 |           1 | covered         |
|          |                          | POST   |      200 |           1 | covered         |
|          |                          |        |      400 |           7 | covered         |
|     100% | /products                | GET    |      200 |           2 | covered         |
|          |                          |        |      500 |           1 | covered         |
|          |                          | POST   |      200 |           1 | covered         |
|          |                          |        |      400 |           6 | covered         |
|     100% | /products/{id}           | DELETE |      200 |           1 | covered         |
|          |                          | GET    |      200 |           1 | covered         |
|          |                          |        |      404 |           1 | covered         |
|          |                          | POST   |      200 |           1 | covered         |
|          |                          |        |      400 |           8 | covered         |
|       0% | /products/{id}/inventory | GET    |          |           0 | missing in spec |
|-----------------------------------------------------------------------------------------|
| 66% API Coverage                                                                        |
|-----------------------------------------------------------------------------------------|
2 out of 6 endpoints are not completely covered in the specification.
Failed the following API Coverage Report success criteria:
Total API coverage: 66% is less than the specified minimum threshold of 100%.
Total missed endpoints count: 2 is greater than the maximum threshold of 0.
</output>
        <output type="stdout">Process finished with exit code 255
</output>
    </root>
    <suite duration="640" locationUrl="java:test://com.store.ContractTest/contractTest" name="contractTest()" metainfo="" status="passed">
        <test duration="321" locationUrl="java:test://com.store.ContractTest/contractTest" name="+ve  Scenario: GET /products/(id:number) -&gt; 200 | GET_DETAILS" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:5.993
    GET /products/10
    Accept-Charset: UTF-8
    Accept: */*
    
    
  Response at 2023-8-29 1:54:5.993
    200 OK
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Keep-Alive: timeout=60
    Connection: keep-alive
    
    {
        "name": "XYZ Phone",
        "type": "gadget",
        "inventory": 10,
        "id": 10
    }
</output>
        </test>
        <test duration="16" locationUrl="java:test://com.store.ContractTest/contractTest" name="+ve  Scenario: GET /products/(id:number) -&gt; 404 | INVALID_ID" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.24
    GET /products/344
    Accept-Charset: UTF-8
    Accept: */*
    
    
  Response at 2023-8-29 1:54:6.24
    404 Not Found
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Keep-Alive: timeout=60
    Connection: keep-alive
    
    {
        "timestamp": "2023-08-29T08:24:06.020+00:00",
        "status": 404,
        "error": "Not Found",
        "path": "/products/344"
    }
</output>
        </test>
        <test duration="59" locationUrl="java:test://com.store.ContractTest/contractTest" name="+ve  Scenario: POST /products/(id:number) -&gt; 200 | UPDATE_DETAILS" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.83
    POST /products/10
    Authenticate: ROKJW
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": 10,
        "type": "gadget",
        "name": "XYZ Fone",
        "id": 10
    }
  Response at 2023-8-29 1:54:6.84
    200 OK
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Length: 0
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Keep-Alive: timeout=60
    Connection: keep-alive
    
    
</output>
        </test>
        <test duration="5" locationUrl="java:test://com.store.ContractTest/contractTest" name="+ve  Scenario: DELETE /products/(id:number) -&gt; 200 | DELETE_PRODUCT" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.90
    DELETE /products/20
    Authenticate: VWXGY
    Accept-Charset: UTF-8
    Accept: */*
    
    
  Response at 2023-8-29 1:54:6.90
    200 OK
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Length: 0
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Keep-Alive: timeout=60
    Connection: keep-alive
    
    
</output>
        </test>
        <test duration="9" locationUrl="java:test://com.store.ContractTest/contractTest" name="+ve  Scenario: GET /products -&gt; 200 | SEARCH_1" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.98
    GET /products?type=gadget&amp;name=
    Accept-Charset: UTF-8
    Accept: */*
    
    
  Response at 2023-8-29 1:54:6.98
    200 OK
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Keep-Alive: timeout=60
    Connection: keep-alive
    
    [
        {
            "name": "XYZ Fone",
            "type": "gadget",
            "inventory": 10,
            "id": 1
        }
    ]
</output>
        </test>
        <test duration="5" locationUrl="java:test://com.store.ContractTest/contractTest" name="+ve  Scenario: GET /products -&gt; 200 | SEARCH_2" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.104
    GET /products?type=gadget&amp;name=XYZ
    Accept-Charset: UTF-8
    Accept: */*
    
    
  Response at 2023-8-29 1:54:6.105
    200 OK
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Keep-Alive: timeout=60
    Connection: keep-alive
    
    [
        {
            "name": "XYZ Fone",
            "type": "gadget",
            "inventory": 10,
            "id": 1
        }
    ]
</output>
        </test>
        <test duration="5" locationUrl="java:test://com.store.ContractTest/contractTest" name="+ve  Scenario: GET /products -&gt; 500 | SEARCH_ERROR" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.111
    GET /products?type=&amp;name=unknown
    Accept-Charset: UTF-8
    Accept: */*
    
    
  Response at 2023-8-29 1:54:6.111
    500 Internal Server Error
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Length: 0
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    
</output>
        </test>
        <test duration="7" locationUrl="java:test://com.store.ContractTest/contractTest" name="+ve  Scenario: POST /products -&gt; 200 | ADD_PRODUCT" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.117
    POST /products
    Authenticate: YUEHA
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": 10,
        "type": "gadget",
        "name": "XYZ Laptop"
    }
  Response at 2023-8-29 1:54:6.118
    200 OK
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Keep-Alive: timeout=60
    Connection: keep-alive
    
    {
        "id": 2
    }
</output>
        </test>
        <test duration="10" locationUrl="java:test://com.store.ContractTest/contractTest" name="+ve  Scenario: GET /orders -&gt; 200 | 200_OK" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.127
    GET /orders?status=fulfilled&amp;productid=10
    Accept-Charset: UTF-8
    Accept: */*
    
    
  Response at 2023-8-29 1:54:6.127
    200 OK
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Keep-Alive: timeout=60
    Connection: keep-alive
    
    [
        {
            "productid": 10,
            "count": 2,
            "status": "pending",
            "id": 10
        },
        {
            "productid": 10,
            "count": 1,
            "status": "pending",
            "id": 20
        }
    ]
</output>
        </test>
        <test duration="10" locationUrl="java:test://com.store.ContractTest/contractTest" name="+ve  Scenario: POST /orders -&gt; 200 | 200_OK" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.137
    POST /orders
    Authenticate: SBUQD
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "status": "pending",
        "count": 1,
        "productid": 10
    }
  Response at 2023-8-29 1:54:6.137
    200 OK
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Keep-Alive: timeout=60
    Connection: keep-alive
    
    {
        "id": 0
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="+ve  Scenario: GET /orders/(id:number) -&gt; 200 | DETAILS" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.143
    GET /orders/10
    Accept-Charset: UTF-8
    Accept: */*
    
    
  Response at 2023-8-29 1:54:6.143
    200 OK
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Keep-Alive: timeout=60
    Connection: keep-alive
    
    {
        "productid": 10,
        "count": 2,
        "status": "pending",
        "id": 10
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="+ve  Scenario: GET /orders/(id:number) -&gt; 404 | INVALID_ID" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.150
    GET /orders/433
    Accept-Charset: UTF-8
    Accept: */*
    
    
  Response at 2023-8-29 1:54:6.150
    404 Not Found
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Keep-Alive: timeout=60
    Connection: keep-alive
    
    {
        "timestamp": "2023-08-29T08:24:06.149+00:00",
        "status": 404,
        "error": "Not Found",
        "path": "/orders/433"
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="+ve  Scenario: POST /orders/(id:number) -&gt; 200 | UPDATE_ORDER" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.156
    POST /orders/204
    Authenticate: JMFUN
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "status": "pending",
        "count": 1,
        "productid": 10,
        "id": 10
    }
  Response at 2023-8-29 1:54:6.156
    200 OK
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Length: 0
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Keep-Alive: timeout=60
    Connection: keep-alive
    
    
</output>
        </test>
        <test duration="5" locationUrl="java:test://com.store.ContractTest/contractTest" name="+ve  Scenario: DELETE /orders/(id:number) -&gt; 200" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.161
    DELETE /orders/713
    Authenticate: GTAXP
    Accept-Charset: UTF-8
    Accept: */*
    
    
  Response at 2023-8-29 1:54:6.162
    200 OK
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Length: 0
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Keep-Alive: timeout=60
    Connection: keep-alive
    
    
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /products/(id:number) -&gt; 200 | UPDATE_DETAILS" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.167
    POST /products/10
    Authenticate: NYCHY
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": 10,
        "type": "gadget",
        "name": "XYZ Fone",
        "id": null
    }
  Response at 2023-8-29 1:54:6.168
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.166+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/products/10"
    }
</output>
        </test>
        <test duration="7" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /products/(id:number) -&gt; 200 | UPDATE_DETAILS" metainfo="" status="passed">
            <output type="stdout">13:54:06.172 [http-nio-8080-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `int` from String "QAQEM": not a valid `int` value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `int` from String "QAQEM": not a valid `int` value&lt;EOL&gt; at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 11] (through reference chain: com.store.model.Product["id"])]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.174
    POST /products/10
    Authenticate: TALKQ
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": 10,
        "type": "gadget",
        "name": "XYZ Fone",
        "id": "QAQEM"
    }
  Response at 2023-8-29 1:54:6.174
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.173+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/products/10"
    }
</output>
        </test>
        <test duration="15" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /products/(id:number) -&gt; 200 | UPDATE_DETAILS" metainfo="" status="passed">
            <output type="stdout">13:54:06.187 [http-nio-8080-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public final org.springframework.http.ResponseEntity&lt;java.lang.String&gt; com.store.controllers.Products.update(int,com.store.model.Product,com.store.model.User): [Field error in object 'product' on field 'name': rejected value [null]; codes [NotNull.product.name,NotNull.name,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [product.name,name]; arguments []; default message [name]]; default message [must not be null]] ]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.190
    POST /products/10
    Authenticate: MDWIW
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": 10,
        "type": "gadget",
        "name": null,
        "id": 10
    }
  Response at 2023-8-29 1:54:6.190
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.188+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/products/10"
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /products/(id:number) -&gt; 200 | UPDATE_DETAILS" metainfo="" status="passed">
            <output type="stdout">13:54:06.194 [http-nio-8080-exec-3] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: VALUE_NUMBER_INT is not a `String` value!; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: VALUE_NUMBER_INT is not a `String` value!&lt;EOL&gt; at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 13] (through reference chain: com.store.model.Product["name"])]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.196
    POST /products/10
    Authenticate: ELJWE
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": 10,
        "type": "gadget",
        "name": 125,
        "id": 10
    }
  Response at 2023-8-29 1:54:6.196
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.195+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/products/10"
    }
</output>
        </test>
        <test duration="8" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /products/(id:number) -&gt; 200 | UPDATE_DETAILS" metainfo="" status="passed">
            <output type="stdout">13:54:06.200 [http-nio-8080-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: VALUE_TRUE is not a `String` value!; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: VALUE_TRUE is not a `String` value!&lt;EOL&gt; at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 13] (through reference chain: com.store.model.Product["name"])]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.202
    POST /products/10
    Authenticate: QAIMN
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": 10,
        "type": "gadget",
        "name": true,
        "id": 10
    }
  Response at 2023-8-29 1:54:6.203
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.201+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/products/10"
    }
</output>
        </test>
        <test duration="7" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /products/(id:number) -&gt; 200 | UPDATE_DETAILS" metainfo="" status="passed">
            <output type="stdout">13:54:06.209 [http-nio-8080-exec-5] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public final org.springframework.http.ResponseEntity&lt;java.lang.String&gt; com.store.controllers.Products.update(int,com.store.model.Product,com.store.model.User): [Field error in object 'product' on field 'type': rejected value [null]; codes [NotNull.product.type,NotNull.type,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [product.type,type]; arguments []; default message [type]]; default message [must not be null]] ]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.211
    POST /products/10
    Authenticate: HAKUS
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": 10,
        "type": null,
        "name": "XYZ Fone",
        "id": 10
    }
  Response at 2023-8-29 1:54:6.211
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.210+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/products/10"
    }
</output>
        </test>
        <test duration="7" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /products/(id:number) -&gt; 200 | UPDATE_DETAILS" metainfo="" status="passed">
            <output type="stdout">13:54:06.216 [http-nio-8080-exec-6] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public final org.springframework.http.ResponseEntity&lt;java.lang.String&gt; com.store.controllers.Products.update(int,com.store.model.Product,com.store.model.User): [Field error in object 'product' on field 'inventory': rejected value [0]; codes [Positive.product.inventory,Positive.inventory,Positive.int,Positive]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [product.inventory,inventory]; arguments []; default message [inventory]]; default message [must be greater than 0]] ]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.218
    POST /products/10
    Authenticate: JUDUR
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": null,
        "type": "gadget",
        "name": "XYZ Fone",
        "id": 10
    }
  Response at 2023-8-29 1:54:6.218
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.217+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/products/10"
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /products/(id:number) -&gt; 200 | UPDATE_DETAILS" metainfo="" status="passed">
            <output type="stdout">13:54:06.222 [http-nio-8080-exec-7] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `int` from String "JOFVS": not a valid `int` value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `int` from String "JOFVS": not a valid `int` value&lt;EOL&gt; at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 18] (through reference chain: com.store.model.Product["inventory"])]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.224
    POST /products/10
    Authenticate: IYWYH
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": "JOFVS",
        "type": "gadget",
        "name": "XYZ Fone",
        "id": 10
    }
  Response at 2023-8-29 1:54:6.224
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.223+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/products/10"
    }
</output>
        </test>
        <test duration="5" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /products -&gt; 200 | ADD_PRODUCT" metainfo="" status="passed">
            <output type="stdout">13:54:06.228 [http-nio-8080-exec-8] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public final org.springframework.http.ResponseEntity&lt;com.store.model.Id&gt; com.store.controllers.Products.create(com.store.model.Product,com.store.model.User): [Field error in object 'product' on field 'name': rejected value [null]; codes [NotNull.product.name,NotNull.name,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [product.name,name]; arguments []; default message [name]]; default message [must not be null]] ]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.230
    POST /products
    Authenticate: KICLN
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": 10,
        "type": "gadget",
        "name": null
    }
  Response at 2023-8-29 1:54:6.230
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.229+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/products"
    }
</output>
        </test>
        <test duration="5" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /products -&gt; 200 | ADD_PRODUCT" metainfo="" status="passed">
            <output type="stdout">13:54:06.234 [http-nio-8080-exec-9] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: VALUE_NUMBER_INT is not a `String` value!; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: VALUE_NUMBER_INT is not a `String` value!&lt;EOL&gt; at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 13] (through reference chain: com.store.model.Product["name"])]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.236
    POST /products
    Authenticate: NBOFV
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": 10,
        "type": "gadget",
        "name": 362
    }
  Response at 2023-8-29 1:54:6.236
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.235+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/products"
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /products -&gt; 200 | ADD_PRODUCT" metainfo="" status="passed">
            <output type="stdout">13:54:06.240 [http-nio-8080-exec-10] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: VALUE_FALSE is not a `String` value!; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: VALUE_FALSE is not a `String` value!&lt;EOL&gt; at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 13] (through reference chain: com.store.model.Product["name"])]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.241
    POST /products
    Authenticate: QYQGO
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": 10,
        "type": "gadget",
        "name": false
    }
  Response at 2023-8-29 1:54:6.241
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.240+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/products"
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /products -&gt; 200 | ADD_PRODUCT" metainfo="" status="passed">
            <output type="stdout">13:54:06.246 [http-nio-8080-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public final org.springframework.http.ResponseEntity&lt;com.store.model.Id&gt; com.store.controllers.Products.create(com.store.model.Product,com.store.model.User): [Field error in object 'product' on field 'type': rejected value [null]; codes [NotNull.product.type,NotNull.type,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [product.type,type]; arguments []; default message [type]]; default message [must not be null]] ]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.247
    POST /products
    Authenticate: PDHSJ
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": 10,
        "type": null,
        "name": "XYZ Laptop"
    }
  Response at 2023-8-29 1:54:6.247
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.246+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/products"
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /products -&gt; 200 | ADD_PRODUCT" metainfo="" status="passed">
            <output type="stdout">13:54:06.252 [http-nio-8080-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public final org.springframework.http.ResponseEntity&lt;com.store.model.Id&gt; com.store.controllers.Products.create(com.store.model.Product,com.store.model.User): [Field error in object 'product' on field 'inventory': rejected value [0]; codes [Positive.product.inventory,Positive.inventory,Positive.int,Positive]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [product.inventory,inventory]; arguments []; default message [inventory]]; default message [must be greater than 0]] ]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.253
    POST /products
    Authenticate: PBGFU
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": null,
        "type": "gadget",
        "name": "XYZ Laptop"
    }
  Response at 2023-8-29 1:54:6.253
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.252+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/products"
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /products -&gt; 200 | ADD_PRODUCT" metainfo="" status="passed">
            <output type="stdout">13:54:06.257 [http-nio-8080-exec-3] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `int` from String "TSUGD": not a valid `int` value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `int` from String "TSUGD": not a valid `int` value&lt;EOL&gt; at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 18] (through reference chain: com.store.model.Product["inventory"])]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.259
    POST /products
    Authenticate: MQYFX
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "inventory": "TSUGD",
        "type": "gadget",
        "name": "XYZ Laptop"
    }
  Response at 2023-8-29 1:54:6.259
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.258+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/products"
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /orders -&gt; 200 | 200_OK" metainfo="" status="passed">
            <output type="stdout">13:54:06.264 [http-nio-8080-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public final org.springframework.http.ResponseEntity&lt;com.store.model.Id&gt; com.store.controllers.Orders.create(com.store.model.Order,com.store.model.User): [Field error in object 'order' on field 'productid': rejected value [0]; codes [Positive.order.productid,Positive.productid,Positive.int,Positive]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [order.productid,productid]; arguments []; default message [productid]]; default message [must be greater than 0]] ]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.265
    POST /orders
    Authenticate: ASPUM
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "status": "pending",
        "count": 1,
        "productid": null
    }
  Response at 2023-8-29 1:54:6.266
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.264+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/orders"
    }
</output>
        </test>
        <test duration="5" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /orders -&gt; 200 | 200_OK" metainfo="" status="passed">
            <output type="stdout">13:54:06.269 [http-nio-8080-exec-5] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `int` from String "PRWHV": not a valid `int` value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `int` from String "PRWHV": not a valid `int` value&lt;EOL&gt; at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 18] (through reference chain: com.store.model.Order["productid"])]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.271
    POST /orders
    Authenticate: CPNWC
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "status": "pending",
        "count": 1,
        "productid": "PRWHV"
    }
  Response at 2023-8-29 1:54:6.271
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.270+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/orders"
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /orders -&gt; 200 | 200_OK" metainfo="" status="passed">
            <output type="stdout">13:54:06.275 [http-nio-8080-exec-6] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public final org.springframework.http.ResponseEntity&lt;com.store.model.Id&gt; com.store.controllers.Orders.create(com.store.model.Order,com.store.model.User): [Field error in object 'order' on field 'count': rejected value [0]; codes [Positive.order.count,Positive.count,Positive.int,Positive]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [order.count,count]; arguments []; default message [count]]; default message [must be greater than 0]] ]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.277
    POST /orders
    Authenticate: WCWCM
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "status": "pending",
        "count": null,
        "productid": 10
    }
  Response at 2023-8-29 1:54:6.277
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.276+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/orders"
    }
</output>
        </test>
        <test duration="5" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /orders -&gt; 200 | 200_OK" metainfo="" status="passed">
            <output type="stdout">13:54:06.281 [http-nio-8080-exec-7] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `int` from String "NYLBR": not a valid `int` value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `int` from String "NYLBR": not a valid `int` value&lt;EOL&gt; at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 3, column: 14] (through reference chain: com.store.model.Order["count"])]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.283
    POST /orders
    Authenticate: VSOOY
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "status": "pending",
        "count": "NYLBR",
        "productid": 10
    }
  Response at 2023-8-29 1:54:6.283
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.282+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/orders"
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /orders -&gt; 200 | 200_OK" metainfo="" status="passed">
            <output type="stdout">13:54:06.287 [http-nio-8080-exec-8] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Parameter specified as non-null is null: method com.store.model.Order.setStatus, parameter &lt;set-?&gt;; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Parameter specified as non-null is null: method com.store.model.Order.setStatus, parameter &lt;set-?&gt;&lt;EOL&gt; at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 15] (through reference chain: com.store.model.Order["status"])]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.288
    POST /orders
    Authenticate: BTNVN
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "status": null,
        "count": 1,
        "productid": 10
    }
  Response at 2023-8-29 1:54:6.288
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.287+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/orders"
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /orders/(id:number) -&gt; 200 | UPDATE_ORDER" metainfo="" status="passed">
            <output type="stdout">--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.294
    POST /orders/925
    Authenticate: RNLLJ
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "status": "pending",
        "count": 1,
        "productid": 10,
        "id": null
    }
  Response at 2023-8-29 1:54:6.295
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.294+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/orders/925"
    }
</output>
        </test>
        <test duration="7" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /orders/(id:number) -&gt; 200 | UPDATE_ORDER" metainfo="" status="passed">
            <output type="stdout">13:54:06.299 [http-nio-8080-exec-10] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `int` from String "WFAIE": not a valid `int` value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `int` from String "WFAIE": not a valid `int` value&lt;EOL&gt; at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 11] (through reference chain: com.store.model.Order["id"])]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.301
    POST /orders/617
    Authenticate: MWRFN
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "status": "pending",
        "count": 1,
        "productid": 10,
        "id": "WFAIE"
    }
  Response at 2023-8-29 1:54:6.301
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.300+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/orders/617"
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /orders/(id:number) -&gt; 200 | UPDATE_ORDER" metainfo="" status="passed">
            <output type="stdout">13:54:06.306 [http-nio-8080-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public final org.springframework.http.ResponseEntity&lt;java.lang.String&gt; com.store.controllers.Orders.update(int,com.store.model.Order,com.store.model.User): [Field error in object 'order' on field 'productid': rejected value [0]; codes [Positive.order.productid,Positive.productid,Positive.int,Positive]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [order.productid,productid]; arguments []; default message [productid]]; default message [must be greater than 0]] ]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.307
    POST /orders/589
    Authenticate: QEKIS
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "status": "pending",
        "count": 1,
        "productid": null,
        "id": 10
    }
  Response at 2023-8-29 1:54:6.307
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.306+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/orders/589"
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /orders/(id:number) -&gt; 200 | UPDATE_ORDER" metainfo="" status="passed">
            <output type="stdout">13:54:06.312 [http-nio-8080-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `int` from String "BSBWG": not a valid `int` value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `int` from String "BSBWG": not a valid `int` value&lt;EOL&gt; at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 4, column: 18] (through reference chain: com.store.model.Order["productid"])]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.313
    POST /orders/132
    Authenticate: HOBGT
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "status": "pending",
        "count": 1,
        "productid": "BSBWG",
        "id": 10
    }
  Response at 2023-8-29 1:54:6.313
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.312+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/orders/132"
    }
</output>
        </test>
        <test duration="7" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /orders/(id:number) -&gt; 200 | UPDATE_ORDER" metainfo="" status="passed">
            <output type="stdout">13:54:06.318 [http-nio-8080-exec-3] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public final org.springframework.http.ResponseEntity&lt;java.lang.String&gt; com.store.controllers.Orders.update(int,com.store.model.Order,com.store.model.User): [Field error in object 'order' on field 'count': rejected value [0]; codes [Positive.order.count,Positive.count,Positive.int,Positive]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [order.count,count]; arguments []; default message [count]]; default message [must be greater than 0]] ]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.320
    POST /orders/321
    Authenticate: BDPOM
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "status": "pending",
        "count": null,
        "productid": 10,
        "id": 10
    }
  Response at 2023-8-29 1:54:6.320
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.319+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/orders/321"
    }
</output>
        </test>
        <test duration="8" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /orders/(id:number) -&gt; 200 | UPDATE_ORDER" metainfo="" status="passed">
            <output type="stdout">13:54:06.325 [http-nio-8080-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `int` from String "UEYWA": not a valid `int` value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `int` from String "UEYWA": not a valid `int` value&lt;EOL&gt; at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 3, column: 14] (through reference chain: com.store.model.Order["count"])]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.327
    POST /orders/651
    Authenticate: GYJCP
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "status": "pending",
        "count": "UEYWA",
        "productid": 10,
        "id": 10
    }
  Response at 2023-8-29 1:54:6.328
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.326+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/orders/651"
    }
</output>
        </test>
        <test duration="6" locationUrl="java:test://com.store.ContractTest/contractTest" name="-ve  Scenario: POST /orders/(id:number) -&gt; 200 | UPDATE_ORDER" metainfo="" status="passed">
            <output type="stdout">13:54:06.333 [http-nio-8080-exec-5] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Parameter specified as non-null is null: method com.store.model.Order.setStatus, parameter &lt;set-?&gt;; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Parameter specified as non-null is null: method com.store.model.Order.setStatus, parameter &lt;set-?&gt;&lt;EOL&gt; at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 15] (through reference chain: com.store.model.Order["status"])]
--------------------
  Request to http://localhost:8080 at 2023-8-29 1:54:6.334
    POST /orders/183
    Authenticate: FNQUA
    Accept-Charset: UTF-8
    Accept: */*
    
    {
        "status": null,
        "count": 1,
        "productid": 10,
        "id": 10
    }
  Response at 2023-8-29 1:54:6.335
    400 Bad Request
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    Pragma: no-cache
    Expires: 0
    X-Frame-Options: DENY
    Content-Type: application/json
    Transfer-Encoding: chunked
    Date: Tue, 29 Aug 2023 08:24:05 GMT
    Connection: close
    
    {
        "timestamp": "2023-08-29T08:24:06.333+00:00",
        "status": 400,
        "error": "Bad Request",
        "path": "/orders/183"
    }
</output>
        </test>
    </suite>
    <test name="Class Configuration" status="error">
        <output type="stderr">java.lang.Exception: "One or more API Coverage report's success criteria were not met."
	at in.specmatic.test.reports.OpenApiCoverageReportProcessor.assertSuccessCriteria(OpenApiCoverageReportProcessor.kt:60)
	at in.specmatic.test.reports.OpenApiCoverageReportProcessor.process(OpenApiCoverageReportProcessor.kt:25)
	at in.specmatic.test.SpecmaticJUnitSupport$Companion.report(SpecmaticJUnitSupport.kt:56)
	at in.specmatic.test.SpecmaticJUnitSupport.report(SpecmaticJUnitSupport.kt)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:675)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:125)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:132)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:111)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptAfterAllMethod(TimeoutExtension.java:102)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:104)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:62)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:43)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:35)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeAfterAllMethods$10(ClassBasedTestDescriptor.java:399)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeAfterAllMethods$11(ClassBasedTestDescriptor.java:397)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1092)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeAfterAllMethods(ClassBasedTestDescriptor.java:397)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.after(ClassBasedTestDescriptor.java:209)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.after(ClassBasedTestDescriptor.java:77)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:145)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:145)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
</output>
    </test>
</testrun>
